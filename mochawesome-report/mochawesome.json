{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-03-27T17:43:40.831Z",
    "end": "2022-03-27T17:43:55.114Z",
    "duration": 14283,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d0f8009d-fdef-49d4-bcd5-4c3295823eae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce62c930-938a-495c-b59a-744f24180c88",
          "title": "Add todo tests ",
          "fullFile": "C:\\Users\\ospichak\\Desktop\\QA\\AutomationJSProject\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds todo to application",
              "fullTitle": "Add todo tests  successfully adds todo to application",
              "timedOut": null,
              "duration": 8097,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// 2. Navigate to test location (https://lambdatest.github.io/sample-todo-app/)\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// 3. Add a todo list item\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"OleksiiAutomation\", Key.RETURN);\n// Assertions\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (textvalue) {\n    return textvalue;\n  });\nlet todoText2 = await driver\n  .findElement(By.xpath(\"/html/body/div/div/div/ul/li[1]\"))\n  .getText()\n  .then(function (textvalue2) {\n    return textvalue2;\n  });\n//  Asset using node.js\n//   assert.strictEqual(todoText, \"OleksiiAutomation\");\n// assert using chai (should)\ntodoText2.should.equal(\"First Item\");\ntodoText.should.equal(\"OleksiiAutomation\");\n// 4. Close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "a3bd31a1-0fca-47af-9e76-3d401a0ec10e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3bd31a1-0fca-47af-9e76-3d401a0ec10e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8097,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "35e70450-66db-4911-9f54-1e752aacf240",
          "title": "Add another todo tests ",
          "fullFile": "C:\\Users\\ospichak\\Desktop\\QA\\AutomationJSProject\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds  another todo to application",
              "fullTitle": "Add another todo tests  successfully adds  another todo to application",
              "timedOut": null,
              "duration": 7944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// 2. Navigate to test location (https://lambdatest.github.io/sample-todo-app/)\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// 3. Add a todo list item\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"OleksiiAutomation\", Key.RETURN);\n// Assertions\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (textvalue) {\n    return textvalue;\n  });\nlet todoText2 = await driver\n  .findElement(By.xpath(\"/html/body/div/div/div/ul/li[1]\"))\n  .getText()\n  .then(function (textvalue2) {\n    return textvalue2;\n  });\n//  Asset using node.js\n//   assert.strictEqual(todoText, \"OleksiiAutomation\");\n// assert using chai (should)\ntodoText2.should.equal(\"First Item\");\ntodoText.should.equal(\"OleksiiAutomation\");\n// 4. Close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "f07379ed-49a2-4d57-9300-1d75113ca8a0",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding nw test for reporting",
              "fullTitle": "Add another todo tests  Adding nw test for reporting",
              "timedOut": null,
              "duration": 5945,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// 1. launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// 2. Navigate to test location (https://lambdatest.github.io/sample-todo-app/)\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// 3. Add a todo list item\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"OleksiiAutomation\", Key.RETURN);\n// Assertions\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (textvalue) {\n    return textvalue;\n  });\nlet todoText2 = await driver\n  .findElement(By.xpath(\"/html/body/div/div/div/ul/li[1]\"))\n  .getText()\n  .then(function (textvalue2) {\n    return textvalue2;\n  });\n//  Asset using node.js\n//   assert.strictEqual(todoText, \"OleksiiAutomation\");\n// assert using chai (should)\ntodoText2.should.equal(\"Second Item\");\ntodoText.should.equal(\"OleksiiAutomation\");\n// 4. Close the browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'First Item' to equal 'Second Item'",
                "estack": "AssertionError: expected 'First Item' to equal 'Second Item'\n    at Context.<anonymous> (test\\secondTest.js:86:22)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                "diff": "- First Item\n+ Second Item\n"
              },
              "uuid": "75e921ad-77c6-4e35-920a-05c5d2b9bcd4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f07379ed-49a2-4d57-9300-1d75113ca8a0"
          ],
          "failures": [
            "75e921ad-77c6-4e35-920a-05c5d2b9bcd4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13889,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}